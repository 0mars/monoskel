---
version: "2.1"

services:
  meerkat:
    build:
      dockerfile: Dockerfile
      context: ./packages/meerkat
    environment:
      - KAFKA_VERSION=2.2.0
      - LOG_TAG_SERVICE=meerkat
      - ENVIRONMENT=DEVELOPMENT
      - APP_URL=http://localhost:8021
      - MONGO_HOST=skel_db
      - MONGO_PORT=27017
      - MONGO_DB=meerkat
    ports:
      - "8000:8000"
    depends_on:
      - skel_zookeeper
      - skel_kafka
      - skel_es
      - skel_db
    entrypoint:
      - sh
      - .docker/entrypoint.sh
    volumes:
      - ./:/code
      - /code/packages/meerkat/.venv
    links:
      - skel_zookeeper
      - skel_kafka
      - skel_es
      - skel_db

  nginx:
    build:
      context: ./.docker/nginx/
      dockerfile: Dockerfile
    volumes:
      - ./.docker/nginx/site.conf:/etc/nginx/conf.d/site.template
      - ./.docker/logs/nginx:/var/log/nginx:cached
    ports:
      - "8021:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - PROXY_HOST=meerkat
      - PROXY_PORT=8000
    depends_on:
      - meerkat
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/site.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  skel_db:
    image: mongo:latest
    environment:
      - MONGO_DATA_DIR=/usr/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - .data/db:/usr/data/db
    ports:
      - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet

  skel_es:
    build:
      context: ./.docker/es
      dockerfile: Dockerfile
    command: elasticsearch
    container_name: skel_es
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail 127.0.0.1:9200/_cluster/health || exit 1"]
      interval: 20s
      timeout: 30s
      retries: 3
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_local=true
      - cluster.name=talks-cluster
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - skel_es:/usr/share/elasticsearch/data

  skel_zookeeper:
    build:
      context: .docker/zookeeper
    command: "start-foreground"
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 zookeeper 4444"]
      interval: 5s
      timeout: 10s
      retries: 3
    volumes:
      - .data/zk:/var/zookeeper/data

  skel_kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    links:
      - skel_zookeeper
    ports:
      - "9092:9092"
    expose:
      - 9092
    depends_on:
      - skel_zookeeper
#    entrypoint: ["sh", "-c", "sleep 2073600"]
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=skel_kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_CREATE_TOPICS=alignment-extracted:1:1
      - KAFKA_ZOOKEEPER_CONNECT=skel_zookeeper:2181
      - JMX_PORT=9999
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  skel_kafka-jmx-exporter:
    build: ./.docker/prometheus-jmx-exporter
    ports:
      - "8086:8080"
    depends_on:
      - skel_kafka
    links:
      - skel_kafka
    environment:
      - JMX_PORT=9999
      - JMX_HOST=skel_kafka
      - HTTP_PORT=8080
      - JMX_EXPORTER_CONFIG_FILE=kafka.yml

  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "skel_zookeeper:2181"
      APPLICATION_SECRET: "089ra124734t6616dkjadfghad"
    command: -Dpidfile.path=/dev/null

  skel_prometheus:
    ports:
      - 9091:9090/tcp
    image: prom/prometheus:v2.10.0
    restart: unless-stopped
    volumes:
      - ./.docker/mount/prometheus:/etc/prometheus
      - prom_data:/prometheus
    links:
      - skel_kafka-jmx-exporter

  skel_grafana:
    image: grafana/grafana:6.2.2
    ports:
      - 3005:3000/tcp
    links:
      - skel_prometheus
    volumes:
      - "skel_grafana_vol:/var/lib/grafana"

volumes:
  skel_grafana_vol:
  skel_graf_db:
  skel_es:
  prom_data: {}
